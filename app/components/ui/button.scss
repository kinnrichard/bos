/**
 * Button Component
 * 
 * A reusable button component with multiple variants and sizes.
 * Can be rendered as a button or a link styled as a button.
 * 
 * Variants:
 * - primary: Blue accent button for primary actions
 * - secondary: Dark background button for secondary actions
 * - danger: Red button for destructive actions
 * - ghost: Transparent button with hover effects
 * 
 * Sizes:
 * - small: Compact button for tight spaces
 * - medium: Default button size
 * - large: Larger button for prominent actions
 * 
 * States:
 * - default: Normal interactive state
 * - hover: Highlighted on mouse over
 * - active: Pressed state
 * - disabled: Non-interactive state
 * - loading: Shows loading indicator
 * 
 * Modifiers:
 * - full-width: Button expands to container width
 * - with-icon: Button contains an icon
 * 
 * @see app/components/ui/button_component.rb
 */

.button {
  // Base styles
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  border: none;
  border-radius: 8px;
  font-weight: 500;
  text-decoration: none;
  cursor: normal;
  transition: all 0.15s ease;
  position: relative;
  white-space: nowrap;
  
  // Remove default button styles
  -webkit-appearance: none;
  appearance: none;
  
  // Prevent text selection
  user-select: none;
  
  // Size variants
  &--small {
    padding: 6px 12px;
    font-size: 13px;
    border-radius: 6px;
  }
  
  &--medium {
    padding: 8px 16px;
    font-size: 14px;
  }
  
  &--large {
    padding: 12px 24px;
    font-size: 16px;
    border-radius: 10px;
  }
  
  // Color variants
  &--primary {
    background-color: var(--accent-blue);
    color: #FFFFFF;
    
    &:hover:not(.button--disabled) {
      background-color: #0A84FF;
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(10, 132, 255, 0.3);
    }
    
    &:active:not(.button--disabled) {
      transform: translateY(0);
      box-shadow: none;
    }
  }
  
  &--secondary {
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border-primary);
    
    &:hover:not(.button--disabled) {
      background-color: var(--bg-tertiary);
      border-color: var(--border-secondary);
    }
    
    &:active:not(.button--disabled) {
      background-color: var(--bg-primary);
    }
  }
  
  &--danger {
    background-color: #FF3B30;
    color: #FFFFFF;
    
    &:hover:not(.button--disabled) {
      background-color: #FF453A;
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(255, 69, 58, 0.3);
    }
    
    &:active:not(.button--disabled) {
      transform: translateY(0);
      box-shadow: none;
    }
  }
  
  &--ghost {
    background-color: transparent;
    color: var(--text-primary);
    
    &:hover:not(.button--disabled) {
      background-color: var(--bg-secondary);
    }
    
    &:active:not(.button--disabled) {
      background-color: var(--bg-tertiary);
    }
  }
  
  &--link {
    background: none;
    border: none;
    color: var(--accent-blue);
    padding: 8px 16px;
    text-decoration: none;
    
    &:hover:not(.button--disabled) {
      text-decoration: underline;
      transform: none;
      box-shadow: none;
    }
    
    &:active:not(.button--disabled) {
      transform: none;
    }
  }
  
  // State modifiers
  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    
    &:hover {
      transform: none;
      box-shadow: none;
    }
  }
  
  &--loading {
    cursor: wait;
    
    .button__text {
      opacity: 0.7;
    }
  }
  
  &--full-width {
    width: 100%;
  }
  
  // Child elements
  &__icon {
    display: flex;
    align-items: center;
    font-size: 1.1em;
  }
  
  &__text {
    display: inline-block;
  }
  
  &__spinner {
    display: flex;
    align-items: center;
    animation: spin 1s linear infinite;
  }
}

// Loading animation
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Focus styles for accessibility
.button:focus-visible {
  outline: 2px solid var(--accent-blue);
  outline-offset: 2px;
}