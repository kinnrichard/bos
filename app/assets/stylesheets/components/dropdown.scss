/**
 * Global Dropdown Styles
 * 
 * Base styles for all dropdown menus to ensure consistent behavior
 * and proper z-index layering above popovers.
 */

/* Force all dropdowns to highest z-index layer and use portal pattern */
.dropdown-menu {
  /* Default styles */
  position: absolute;
  top: 100%;
  left: 0;
  margin-top: 4px;
  z-index: 1100; /* Higher than popover's 1000 */
  background-color: var(--bg-secondary, #1C1C1D); /* Fallback to solid dark color */
  border: 1px solid var(--border-primary);
  border-radius: 6px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  min-width: 100%;
  
  /* Ensure solid background - no transparency */
  opacity: 1 !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  
  /* When inside a popover, ensure it can escape bounds */
  .popover & {
    z-index: 1200;
  }
}

/* Fixed positioned dropdowns (set by JS) - CRITICAL for escaping overflow containers */
.dropdown-menu[style*="position: fixed"] {
  z-index: 10000 !important;
  min-width: 0 !important;
  /* Ensure it's not clipped by any parent */
  pointer-events: auto !important;
}

/* Task status dropdowns specifically */
.task-status-container .dropdown-menu {
  z-index: 10000 !important;
}

/* Ensure dropdown containers allow overflow */
.popover .dropdown-container,
.task-status-container,
.dropdown-container {
  position: relative;
  overflow: visible !important;
  
  /* Create new stacking context only when dropdown is open */
  &[data-dropdown-open="true"] {
    isolation: isolate;
    z-index: 1000;
  }
}

/* Ensure dropdown containers don't clip their menus */
.dropdown-container {
  position: relative;
  overflow: visible !important;
  z-index: auto !important; // Don't create new stacking context
}

/* Override any parent overflow hidden when dropdown is open */
[data-dropdown-open="true"] {
  overflow: visible !important;
}

/* Ensure dropdown menus are always visible and clickable */
.dropdown-menu:not(.hidden) {
  pointer-events: auto !important;
  opacity: 1 !important;
  visibility: visible !important;
  isolation: isolate; // Create new stacking context
  transform: translateZ(0); // Force GPU layer
}

/* Generic dropdown option styles */
.dropdown-option {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 8px 12px;
  background: transparent; /* Explicitly transparent, will inherit parent background */
  border: none;
  color: var(--text-primary);
  font-size: 14px;
  text-align: left;
  cursor: pointer;
  transition: background-color 0.15s ease;
  
  &:hover {
    background-color: var(--bg-tertiary);
  }
  
  &.active {
    background-color: var(--bg-tertiary);
  }
  
  /* For single-select dropdowns in popovers */
  .popover &.selected {
    background-color: var(--accent-blue);
    color: #FFFFFF;
  }
}


/* Generic dropdown elements */
.dropdown-icon {
  width: 20px;
  text-align: center;
  margin-right: 8px;
  flex-shrink: 0;
  
  /* For initials badges */
  &.dropdown-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background-color: var(--accent-blue);
    color: white;
    font-size: 10px;
    font-weight: 600;
  }
}

.dropdown-label {
  flex: 1;
}

.dropdown-check {
  margin-left: auto;
  color: var(--accent-blue);
  font-weight: bold;
  display: none;
  
  .dropdown-option.active & {
    display: inline;
  }
}

/* Hidden elements for form submission */
input.dropdown-value {
  display: none !important;
}