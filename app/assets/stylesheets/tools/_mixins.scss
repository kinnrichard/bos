// Utility mixins

// Truncate text with ellipsis
@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Multi-line truncation
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visually hidden but accessible
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// Focus styles
@mixin focus-ring {
  outline: none;
  border-color: var(--accent-blue);
  box-shadow: 0 0 0 2px rgba(0, 163, 255, 0.3);
}

// Button reset
@mixin button-reset {
  -webkit-appearance: none;
  appearance: none;
  background: none;
  border: none;
  cursor: normal;
  padding: 0;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  text-align: inherit;
}

// Scrollbar styling
@mixin custom-scrollbar($width: 8px, $track-bg: transparent, $thumb-bg: var(--bg-tertiary)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background-color: $track-bg;
  }
  
  &::-webkit-scrollbar-thumb {
    background-color: $thumb-bg;
    border-radius: calc($width / 2);
    
    &:hover {
      background-color: var(--text-tertiary);
    }
  }
}

// Container with rounded corners and border
@mixin panel($radius: var(--radius-xl)) {
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: $radius;
}

// Transition
@mixin transition($properties...) {
  @if length($properties) == 0 {
    transition: all var(--duration-fast) var(--easing-smooth);
  } @else {
    $transitions: ();
    @each $property in $properties {
      $transitions: append($transitions, $property var(--duration-fast) var(--easing-smooth), comma);
    }
    transition: $transitions;
  }
}

// Hover state
@mixin hover {
  &:hover:not(:disabled) {
    @content;
  }
}

// Active state
@mixin active {
  &:active:not(:disabled) {
    @content;
  }
}

// Focus visible
@mixin focus-visible {
  &:focus-visible {
    @content;
  }
}

// Center content
@mixin center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Absolute positioning helpers
@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}