/*
 * Shared Task Component Styles
 * 
 * This stylesheet contains all task-related CSS extracted from TaskList.svelte
 * to be shared across TaskRow, NewTaskRow, and other task components.
 * 
 * Organized by:
 * 1. Core task item layout
 * 2. Interactive states
 * 3. Content styling  
 * 4. Controls (disclosure, status, actions)
 * 5. New task row styling
 * 6. Responsive breakpoints
 * 7. Accessibility support
 */

/* ===== CORE TASK ITEM LAYOUT ===== */

.task-item {
  display: flex;
  align-items: center;
  padding: 4px 4px !important;
  padding-left: calc(4px + (var(--depth, 0) * 32px)) !important;
  border: none !important;
  border-radius: 8px !important;
  background: none !important;
  background-color: transparent !important;
  transition: opacity 0.2s ease, transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), height 0.3s ease, margin 0.3s ease, padding 0.3s ease;
  cursor: pointer;
  user-select: none;
  position: relative;
  will-change: transform;
  overflow: visible;
}

.task-content {
  flex: 1;
  min-width: 0;
  display: flex;
  align-items: center;
  gap: 8px;
}

/* ===== INTERACTIVE STATES ===== */

/* Task deletion animation */
.task-item.task-deleting {
  height: 0 !important;
  opacity: 0 !important;
  margin: 0 !important;
  padding: 0 !important;
  pointer-events: none;
  transform: scale(0.95);
}

/* Drag selection states */
.task-item.task-selected-for-drag {
  background-color: rgba(0, 122, 255, 0.2) !important;
}

/* CSS-only selection styling with consecutive range support */
.task-item.selected {
  background-color: var(--accent-blue) !important;
  color: white !important;
  text-shadow: 0.5px 0.5px 2px rgba(0, 0, 0, 0.75);
  border-left: 3px solid var(--accent-blue);
  border-radius: 4px;
}

/* ===== FLIP ANIMATION STYLES ===== */

/* Animation performance optimization */
.task-item[data-flip-animating="true"] {
  will-change: transform;
  z-index: 10;
}

/* Prevent interaction during animations */
.tasks-container[data-flip-active="true"] {
  pointer-events: none;
}

/* Smooth transform-only animations for reordering */
.task-item.animating-position {
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .task-item {
    transition: none !important;
  }
  
  .task-item.animating-position {
    transition: none !important;
  }
}

/* Row also appears selected when it contains an editing title */
.task-item:has(.editable-title.editing) {
  background-color: var(--accent-blue) !important;
  color: white !important;
  text-shadow: 0.5px 0.5px 2px rgba(0, 0, 0, 0.75);
  border-left: 3px solid var(--accent-blue);
  border-radius: 4px;
}

.task-item.multi-select-active.selected {
  background-color: var(--accent-blue) !important;
  color: white !important;
  text-shadow: 0.5px 0.5px 2px rgba(0, 0, 0, 0.75);
}

.task-item.task-selected-for-drag {
  background-color: var(--accent-blue) !important;
  color: white !important;
  text-shadow: 0.5px 0.5px 2px rgba(0, 0, 0, 0.75);
}

/* Modern Safari solution: Reverse logic for perfect rounded corners */

/* Start with full rounding on all selected tasks */
.task-item.selected {
  border-radius: 6px !important;
}

/* Remove top rounding from tasks that have a selected task immediately before */
.task-item.selected + .task-item.selected {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

/* Remove bottom rounding from tasks that have a selected task immediately after */
.task-item.selected:has(+ .task-item.selected) {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

/* Completion states */
.task-item.completed .task-title,
.task-item.completed .task-content {
  opacity: 0.75;
  color: #8E8E93;
}

.task-item.cancelled .task-title,
.task-item.cancelled .task-content {
  opacity: 0.75;
  color: #8E8E93;
  text-decoration: line-through;
  text-decoration-color: #8E8E93;
  text-decoration-thickness: 1px;
}

/* ===== DISCLOSURE CONTROLS ===== */

.disclosure-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  color: var(--text-tertiary);
  transition: transform 0.2s ease;
}

.disclosure-button:hover {
  opacity: 0.8;
}

.chevron-icon {
  width: 12px;
  height: 12px;
  opacity: 0.7;
  transition: transform 0.2s ease;
  transform: rotate(0deg);
}

.disclosure-button[aria-expanded="true"] .chevron-icon,
.chevron-icon.expanded {
  transform: rotate(90deg);
}

.disclosure-spacer {
  width: 20px;
  height: 20px;
  flex-shrink: 0;
}

/* ===== TASK STATUS ===== */

.task-status {
  flex-shrink: 0;
  margin-top: 1px;
  position: relative;
  margin-left: 2px;
  margin-right: 6px;
}

.status-emoji {
  font-size: 14px;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: opacity 0.15s;
}

.status-emoji:hover {
  opacity: 0.8;
}

.status-emoji.disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.status-emoji.disabled:hover {
  opacity: 0.5;
}

/* ===== TASK TITLE ===== */

.task-title {
  font-size: 17px;
  color: #FFFFFF;
  word-wrap: break-word;
  font-weight: 400;
  line-height: 1.3;
  cursor: text;
  outline: none;
  display: inline-block;
  min-width: 75px;
  width: fit-content;
  max-width: 100%;
  user-select: text;
}

/* Non-editable state styling */
.task-item.non-editable .task-title {
  cursor: default;
  user-select: none;
}

.task-item.non-editable .task-title:hover {
  background-color: transparent;
}

.task-title-input {
  background: none;
  padding: 0;
  font-family: inherit;
  color: inherit;
  width: fit-content;
  min-width: 75px;
  max-width: 100%;
  resize: none;
}

/* ===== TASK ACTIONS ===== */

.task-actions {
  display: flex;
  align-items: center;
  flex-shrink: 0;
  pointer-events: none;
  opacity: 0;
}

.task-item:hover .task-actions {
  opacity: 1;
}

.task-actions:focus-within {
  opacity: 1;
}

/* ===== NEW TASK ROW STYLING ===== */

.task-item-add-new {
  --text-color: var(--text-secondary, #8E8E93);
}

.task-item-add-new .task-status {
  /* visual alignment with other task rows */
  margin-right: 8px;
}

.add-task-placeholder {
  color: var(--text-color);
  cursor: pointer;
  transition: color 0.15s ease, opacity 0.15s ease;
  opacity: 0.5;
}

/* Always show full opacity on row hover */
.task-item-add-new:hover .add-task-placeholder {
  opacity: 1;
}

/* Desktop hover states */
@media (hover: hover) and (pointer: fine) {
  .task-item-add-new:hover {
    --text-color: var(--accent-blue, #007AFF);
  }
  
  .task-item-add-new:hover .add-task-placeholder {
    color: var(--text-color);
  }
  
  /* Hide label by default when list has tasks (desktop only) */
  .task-item-add-new:not(.is-empty-list) .add-task-placeholder {
    opacity: 0;
  }
  
  /* Show label on hover when list has tasks */
  .task-item-add-new:not(.is-empty-list):hover .add-task-placeholder {
    opacity: 1;
  }
}

/* Mobile styles - always show label */
@media (hover: none) and (pointer: coarse) {
  .task-item-add-new .add-task-placeholder {
    opacity: 0.5;
  }
  
  .task-item-add-new:active .add-task-placeholder {
    opacity: 1 !important;
  }
  
  /* Never hide text on mobile */
  .task-item-add-new .add-task-placeholder.hide-on-hover {
    opacity: 0.5 !important;
    pointer-events: auto !important;
  }
  
  .task-item-add-new:active .add-task-placeholder.hide-on-hover {
    opacity: 1 !important;
  }
  
  /* Color change on touch */
  .task-item-add-new:active {
    --text-color: var(--accent-blue, #007AFF);
  }
  
  .task-item-add-new:active .add-task-placeholder {
    color: var(--text-color);
  }
}

.task-item-add-new .status-emoji {
  /* Disable hover state entirely for add-new rows to prevent interference */
  cursor: default;
}

.task-item-add-new .status-emoji img {
  transition: none;
  opacity: 0.8;
}

.task-item-add-new:hover .status-emoji img {
  opacity: 1;
}

.task-item-add-new .status-emoji:hover {
  /* Completely disable hover effects for add-new task status emojis */
  opacity: inherit;
  transform: none;
  background: none;
  cursor: default;
}

.creating-indicator {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  color: var(--text-secondary);
}

/* ===== TIME TRACKING ===== */

.time-tracking {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 12px;
  color: var(--text-secondary);
  opacity: 0.8;
}

.time-icon {
  font-size: 11px;
}

.time-duration.in-progress {
  color: var(--accent-green, #32D74B);
  font-weight: 500;
}

/* ===== TASK METADATA ===== */

.task-metadata {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: auto;
  flex-shrink: 0;
}

.assigned-indicator {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background-color: var(--accent-blue);
  color: white;
  font-size: 10px;
  font-weight: 600;
  text-transform: uppercase;
}

.notes-indicator {
  display: flex;
  align-items: center;
  gap: 2px;
  font-size: 11px;
  color: var(--text-tertiary);
  opacity: 0.7;
}

.notes-icon {
  font-size: 10px;
}

.notes-count {
  font-weight: 500;
}

/* ===== RESPONSIVE BREAKPOINTS ===== */

@media (max-width: 768px) {
  .task-item {
    padding: 4px !important;
  }

  .task-title {
    font-size: 16px;
  }
}

@media (max-width: 480px) {
  .task-title {
    font-size: 15px;
  }

  .disclosure-button,
  .disclosure-spacer {
    width: 16px;
    height: 16px;
  }

  .status-emoji {
    width: 18px;
    height: 18px;
    font-size: 12px;
  }
}

/* ===== TOUCH SUPPORT FOR TABLETS ===== */

@media (hover: none) and (pointer: coarse) {
  .task-item {
    min-height: 44px;
    touch-action: manipulation;
  }
  
  .status-emoji {
    min-width: 44px;
    min-height: 44px;
  }

  .disclosure-button {
    min-width: 44px;
    min-height: 44px;
  }
  
  .task-item::before {
    content: '⋮⋮';
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-tertiary);
    font-size: 16px;
    opacity: 0.5;
    pointer-events: none;
  }
}

/* ===== HIGH CONTRAST MODE SUPPORT ===== */

@media (prefers-contrast: high) {
  .task-item:hover {
    background-color: rgba(255, 255, 255, 0.1) !important;
  }

  .task-item.selected {
    background-color: var(--accent-blue) !important;
    color: white !important;
    text-shadow: 0.5px 0.5px 2px rgba(0, 0, 0, 0.75);
  }
}