// Generated Zero Schema
// Generated at: 2025-07-10T19:20:33Z
// DO NOT EDIT - This file is automatically generated from Rails schema

import { 
  createSchema, 
  table, 
  string, 
  number, 
  boolean, 
  json
} from '@rocicorp/zero';

// Activity logs table
const activity_log = table('activity_logs')
  .columns({
    action: string().optional(),
    loggable_type: string(),
    metadata: json().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    user_id: string().optional(),
    client_id: string().optional(),
    job_id: string().optional(),
    loggable_id: string().optional()
  })
  .primaryKey('id');


// Contact methods table
const contact_method = table('contact_methods')
  .columns({
    value: string().optional(),
    formatted_value: string().optional(),
    contact_type: string().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    person_id: string().optional()
  })
  .primaryKey('id');


// Jobs table
const job = table('jobs')
  .columns({
    title: string().optional(),
    status: string().optional(),
    priority: number().optional(),
    due_date: string().optional(),
    start_on_date: string().optional(),
    created_at: string(),
    updated_at: string(),
    description: string().optional(),
    due_on: string().optional(),
    due_time: string().optional(),
    start_on: string().optional(),
    start_time: string().optional(),
    lock_version: number(),
    id: string(),
    client_id: string().optional(),
    created_by_id: string().optional()
  })
  .primaryKey('id');


// Clients table
const client = table('clients')
  .columns({
    name: string().optional(),
    client_type: string().optional(),
    created_at: string(),
    updated_at: string(),
    name_normalized: string().optional(),
    id: string()
  })
  .primaryKey('id');


// Devices table
const device = table('devices')
  .columns({
    name: string().optional(),
    model: string().optional(),
    serial_number: string().optional(),
    location: string().optional(),
    notes: string().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    client_id: string().optional(),
    person_id: string().optional()
  })
  .primaryKey('id');


// Job assignments table
const job_assignment = table('job_assignments')
  .columns({
    created_at: string(),
    updated_at: string(),
    id: string(),
    job_id: string().optional(),
    user_id: string().optional()
  })
  .primaryKey('id');


// Job people table
const job_person = table('job_people')
  .columns({
    created_at: string(),
    updated_at: string(),
    id: string(),
    job_id: string().optional(),
    person_id: string().optional()
  })
  .primaryKey('id');


// Job targets table
const job_target = table('job_targets')
  .columns({
    target_type: string(),
    status: string().optional(),
    instance_number: number(),
    reason: string().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    job_id: string().optional(),
    target_id: string().optional()
  })
  .primaryKey('id');


// Notes table
const note = table('notes')
  .columns({
    notable_type: string(),
    content: string().optional(),
    created_at: string(),
    updated_at: string(),
    metadata: json().optional(),
    id: string(),
    user_id: string().optional(),
    notable_id: string().optional()
  })
  .primaryKey('id');


// People table
const person = table('people')
  .columns({
    name: string().optional(),
    notes: string().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    client_id: string().optional()
  })
  .primaryKey('id');


// Scheduled date time users table
const scheduled_date_time_user = table('scheduled_date_time_users')
  .columns({
    created_at: string(),
    updated_at: string(),
    id: string(),
    scheduled_date_time_id: string().optional(),
    user_id: string().optional()
  })
  .primaryKey('id');


// Scheduled date times table
const scheduled_date_time = table('scheduled_date_times')
  .columns({
    schedulable_type: string(),
    scheduled_type: string(),
    scheduled_date: string(),
    scheduled_time: string().optional(),
    notes: string().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    schedulable_id: string().optional()
  })
  .primaryKey('id');


// Tasks table
const task = table('tasks')
  .columns({
    title: string().optional(),
    status: string().optional(),
    position: number().optional(),
    created_at: string(),
    updated_at: string(),
    subtasks_count: number().optional(),
    reordered_at: string().optional(),
    lock_version: number(),
    applies_to_all_targets: boolean(),
    id: string(),
    job_id: string().optional(),
    assigned_to_id: string().optional(),
    parent_id: string().optional(),
    deleted_at: string().optional()
  })
  .primaryKey('id');


// Task completions table
const task_completion = table('task_completions')
  .columns({
    status: string(),
    completed_at: string().optional(),
    notes: string().optional(),
    created_at: string(),
    updated_at: string(),
    id: string(),
    task_id: string().optional(),
    job_target_id: string().optional(),
    completed_by_id: string().optional()
  })
  .primaryKey('id');


// Users table
const user = table('users')
  .columns({
    name: string().optional(),
    email: string().optional(),
    role: string().optional(),
    created_at: string(),
    updated_at: string(),
    password_digest: string().optional(),
    resort_tasks_on_status_change: boolean(),
    id: string()
  })
  .primaryKey('id');


// Create the complete schema
export const schema = createSchema({
  tables: [
    activity_log,
    contact_method,
    job,
    client,
    device,
    job_assignment,
    job_person,
    job_target,
    note,
    person,
    scheduled_date_time_user,
    scheduled_date_time,
    task,
    task_completion,
    user
  ],
});

export type ZeroClient = Zero<typeof schema>;

// Table type exports for convenience
export type ActivityLog = typeof activity_log.inferZodType._type;
export type ContactMethod = typeof contact_method.inferZodType._type;
export type Job = typeof job.inferZodType._type;
export type Client = typeof client.inferZodType._type;
export type Device = typeof device.inferZodType._type;
export type JobAssignment = typeof job_assignment.inferZodType._type;
export type JobPerson = typeof job_person.inferZodType._type;
export type JobTarget = typeof job_target.inferZodType._type;
export type Note = typeof note.inferZodType._type;
export type Person = typeof person.inferZodType._type;
export type ScheduledDateTimeUser = typeof scheduled_date_time_user.inferZodType._type;
export type ScheduledDateTime = typeof scheduled_date_time.inferZodType._type;
export type Task = typeof task.inferZodType._type;
export type TaskCompletion = typeof task_completion.inferZodType._type;
export type User = typeof user.inferZodType._type;
