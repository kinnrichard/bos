// ü§ñ AUTO-GENERATED ZERO MUTATIONS
// Generated at: 2025-07-11T05:39:52Z
//
// ‚ö†Ô∏è  DO NOT EDIT THIS FILE DIRECTLY
// This file is automatically generated. Manual changes will be overwritten.
//
// üîß FOR CUSTOMIZATIONS:
// Use the corresponding .custom.ts file for your custom mutations
//
// üîÑ TO REGENERATE: Run `rails generate zero:mutations`


import { getZero } from './client';

// Generated CRUD mutations for activity_logs

/**
 * Create a new activity_log
 */
export async function createActivityLog(data: {
  loggable_type: string;
  action?: string;
  metadata?: any;
  user_id?: string;
  client_id?: string;
  job_id?: string;
  loggable_id?: string
}) {
  const zero = getZero();
  const id = crypto.randomUUID();
  const now = Date.now();

  await zero.mutate.activity_logs.insert({
    id,
    ...data,
    created_at: now,
    updated_at: now,
  });

  return { id };
}


/**
 * Update a activity_log
 */
export async function updateActivityLog(id: string, data: Partial<{
  // Add updateable fields here based on table columns
  [key: string]: any;
}>) {
  const zero = getZero();
  const now = Date.now();

  await zero.mutate.activity_logs.update({
    id,
    ...data,
    updated_at: now,
  });

  return { id };
}


/**
 * Delete a activity_log (permanent deletion)
 */
export async function deleteActivityLog(id: string) {
  const zero = getZero();

  await zero.mutate.activity_logs.delete({
    id
  });

  return { id };
}


/**
 * Create or update a activity_log
 */
export async function upsertActivityLog(data: any) {
  const zero = getZero();
  const now = Date.now();

  await zero.mutate.activity_logs.upsert({
    ...data,
    updated_at: now,
  });

  return { id: data.id };
}

