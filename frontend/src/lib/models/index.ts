/**
 * Epic-008 Model Index - Simplified ActiveRecord/ReactiveRecord Architecture
 * 
 * Generated: 2025-07-15 22:09:11 UTC
 * 
 * ⚠️  Do not edit this file manually - it will be regenerated
 * To regenerate: rails generate zero:active_models
 */

// ActiveRecord models (non-reactive, Promise-based)
export { ActivityLog, type ActivityLogData, type CreateActivityLogData, type UpdateActivityLogData } from './activity-log';
export { ContactMethod, type ContactMethodData, type CreateContactMethodData, type UpdateContactMethodData } from './contact-method';
export { Job, type JobData, type CreateJobData, type UpdateJobData } from './job';
export { Client, type ClientData, type CreateClientData, type UpdateClientData } from './client';
export { Device, type DeviceData, type CreateDeviceData, type UpdateDeviceData } from './device';
export { JobAssignment, type JobAssignmentData, type CreateJobAssignmentData, type UpdateJobAssignmentData } from './job-assignment';
export { JobPerson, type JobPersonData, type CreateJobPersonData, type UpdateJobPersonData } from './job-person';
export { Note, type NoteData, type CreateNoteData, type UpdateNoteData } from './note';
export { JobTarget, type JobTargetData, type CreateJobTargetData, type UpdateJobTargetData } from './job-target';
export { Person, type PersonData, type CreatePersonData, type UpdatePersonData } from './person';
export { ScheduledDateTime, type ScheduledDateTimeData, type CreateScheduledDateTimeData, type UpdateScheduledDateTimeData } from './scheduled-date-time';
export { ScheduledDateTimeUser, type ScheduledDateTimeUserData, type CreateScheduledDateTimeUserData, type UpdateScheduledDateTimeUserData } from './scheduled-date-time-user';
export { TaskCompletion, type TaskCompletionData, type CreateTaskCompletionData, type UpdateTaskCompletionData } from './task-completion';
export { Task, type TaskData, type CreateTaskData, type UpdateTaskData } from './task';
export { User, type UserData, type CreateUserData, type UpdateUserData } from './user';

// ReactiveRecord models (Svelte 5 reactive)
export { ReactiveActivityLog } from './reactive-activity-log';
export { ReactiveContactMethod } from './reactive-contact-method';
export { ReactiveJob } from './reactive-job';
export { ReactiveClient } from './reactive-client';
export { ReactiveDevice } from './reactive-device';
export { ReactiveJobAssignment } from './reactive-job-assignment';
export { ReactiveJobPerson } from './reactive-job-person';
export { ReactiveNote } from './reactive-note';
export { ReactiveJobTarget } from './reactive-job-target';
export { ReactivePerson } from './reactive-person';
export { ReactiveScheduledDateTime } from './reactive-scheduled-date-time';
export { ReactiveScheduledDateTimeUser } from './reactive-scheduled-date-time-user';
export { ReactiveTaskCompletion } from './reactive-task-completion';
export { ReactiveTask } from './reactive-task';
export { ReactiveUser } from './reactive-user';

/**
 * ActiveRecord models object for dynamic access
 * 
 * @example
 * ```typescript
 * import { ActiveModels } from '$lib/models';
 * const Task = ActiveModels.Task;
 * const tasks = await Task.all().all();
 * ```
 */
export const ActiveModels = {
  ActivityLog,
  ContactMethod,
  Job,
  Client,
  Device,
  JobAssignment,
  JobPerson,
  Note,
  JobTarget,
  Person,
  ScheduledDateTime,
  ScheduledDateTimeUser,
  TaskCompletion,
  Task,
  User
};

/**
 * ReactiveRecord models object for dynamic access
 * 
 * @example
 * ```typescript
 * import { ReactiveModels } from '$lib/models';
 * const ReactiveTask = ReactiveModels.ReactiveTask;
 * const tasksQuery = ReactiveTask.all().all();
 * ```
 */
export const ReactiveModels = {
  ReactiveActivityLog,
  ReactiveContactMethod,
  ReactiveJob,
  ReactiveClient,
  ReactiveDevice,
  ReactiveJobAssignment,
  ReactiveJobPerson,
  ReactiveNote,
  ReactiveJobTarget,
  ReactivePerson,
  ReactiveScheduledDateTime,
  ReactiveScheduledDateTimeUser,
  ReactiveTaskCompletion,
  ReactiveTask,
  ReactiveUser
};

/**
 * Import alias helpers for easy switching
 * 
 * @example
 * ```typescript
 * // In non-reactive context
 * import { Task } from '$lib/models/task';
 * 
 * // In Svelte component
 * import { ReactiveTask as Task } from '$lib/models/reactive-task';
 * ```
 */
