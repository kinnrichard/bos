/**
 * JobData - TypeScript interface for jobs table
 * 
 * Generated from Rails schema: 2025-07-23 04:39:23 UTC
 * * Relationships (loaded via includes()):
 * - client: belongs_to Client
 * - createdBy: belongs_to User
 * - activityLogs: has_many ActivityLog
 * - jobAssignments: has_many JobAssignment
 * - technicians: has_many User, through: job_assignments
 * - jobPeople: has_many JobPerson
 * - people: has_many Person, through: job_people
 * - tasks: has_many Task
 * - allTasks: has_many Task
 * - notes: has_many Note
 * - scheduledDateTimes: has_many ScheduledDateTime
 * ⚠️  Do not edit this file manually - it will be regenerated
 * To customize: Modify Rails model or run: rails generate zero:active_models
 */

import type { BaseRecord } from '../base/types';
import type { ClientData } from './client-data';
import type { UserData } from './user-data';
import type { ActivityLogData } from './activity-log-data';
import type { JobAssignmentData } from './job-assignment-data';
import type { JobPersonData } from './job-person-data';
import type { PersonData } from './person-data';
import type { TaskData } from './task-data';
import type { NoteData } from './note-data';
import type { ScheduledDateTimeData } from './scheduled-date-time-data';

/**
 * Complete Job record interface
 * Matches the database schema exactly with optional relationships
 */
export interface JobData extends BaseRecord {
  title?: string;
  created_at: string | number;
  updated_at: string | number;
  description?: string;
  lock_version: number;
  id: string;
  client_id?: string;
  created_by_id?: string;
  due_at?: string | number;
  due_time_set: boolean;
  starts_at?: string | number;
  start_time_set: boolean;
  status: 'open' | 'in_progress' | 'paused' | 'waiting_for_customer' | 'waiting_for_scheduled_appointment' | 'successfully_completed' | 'cancelled';
  priority: 'critical' | 'high' | 'normal' | 'low' | 'proactive_followup';

  // Epic-011: Relationship properties (optional - loaded via includes())
  client?: ClientData; // belongs_to
  createdBy?: UserData; // belongs_to
  activityLogs?: ActivityLogData[]; // has_many
  jobAssignments?: JobAssignmentData[]; // has_many
  technicians?: UserData[]; // has_many
  jobPeople?: JobPersonData[]; // has_many
  people?: PersonData[]; // has_many
  tasks?: TaskData[]; // has_many
  allTasks?: TaskData[]; // has_many
  notes?: NoteData[]; // has_many
  scheduledDateTimes?: ScheduledDateTimeData[]; // has_many
}

/**
 * Create Job data interface
 * Excludes auto-generated fields and relationships
 */
export type CreateJobData = Omit<JobData, 'id' | 'created_at' | 'updated_at' | 'client' | 'createdBy' | 'activityLogs' | 'jobAssignments' | 'technicians' | 'jobPeople' | 'people' | 'tasks' | 'allTasks' | 'notes' | 'scheduledDateTimes'>;

/**
 * Update Job data interface
 * All fields optional except id, excludes relationships
 */
export type UpdateJobData = Partial<Omit<JobData, 'id' | 'created_at' | 'updated_at' | 'client' | 'createdBy' | 'activityLogs' | 'jobAssignments' | 'technicians' | 'jobPeople' | 'people' | 'tasks' | 'allTasks' | 'notes' | 'scheduledDateTimes'>>;
