/**
 * UserData - TypeScript interface for users table
 * 
 * Generated from Rails schema: 2025-07-16 12:57:13 UTC
 * * Relationships (loaded via includes()):
 * - activityLogs: has_many ActivityLog
 * - assignedJobs: has_many Job
 * - assignedTasks: has_many Task
 * - jobAssignments: has_many JobAssignment
 * - technicianJobs: has_many Job, through: job_assignments
 * - scheduledDateTimeUsers: has_many ScheduledDateTimeUser
 * - scheduledDateTimes: has_many ScheduledDateTime, through: scheduled_date_time_users
 * - notes: has_many Note
 * - createdJobs: has_many Job
 * - refreshTokens: has_many RefreshToken
 * - revokedTokens: has_many RevokedToken
 * ⚠️  Do not edit this file manually - it will be regenerated
 * To customize: Modify Rails model or run: rails generate zero:active_models
 */

import type { BaseRecord } from '../base/types';
import type { ActivityLogData } from './activity-log-data';
import type { JobData } from './job-data';
import type { TaskData } from './task-data';
import type { JobAssignmentData } from './job-assignment-data';
import type { ScheduledDateTimeUserData } from './scheduled-date-time-user-data';
import type { ScheduledDateTimeData } from './scheduled-date-time-data';
import type { NoteData } from './note-data';

/**
 * Complete User record interface
 * Matches the database schema exactly with optional relationships
 */
export interface UserData extends BaseRecord {
  name?: string;
  email?: string;
  created_at: string | number;
  updated_at: string | number;
  password_digest?: string;
  resort_tasks_on_status_change: boolean;
  id: string;
  role: 'admin' | 'technician' | 'customer_specialist' | 'owner';

  // Epic-011: Relationship properties (optional - loaded via includes())
  activityLogs?: ActivityLogData[]; // has_many
  assignedJobs?: JobData[]; // has_many
  assignedTasks?: TaskData[]; // has_many
  jobAssignments?: JobAssignmentData[]; // has_many
  technicianJobs?: JobData[]; // has_many
  scheduledDateTimeUsers?: ScheduledDateTimeUserData[]; // has_many
  scheduledDateTimes?: ScheduledDateTimeData[]; // has_many
  notes?: NoteData[]; // has_many
  createdJobs?: JobData[]; // has_many
}

/**
 * Create User data interface
 * Excludes auto-generated fields and relationships
 */
export type CreateUserData = Omit<UserData, 'id' | 'created_at' | 'updated_at' | 'activityLogs' | 'assignedJobs' | 'assignedTasks' | 'jobAssignments' | 'technicianJobs' | 'scheduledDateTimeUsers' | 'scheduledDateTimes' | 'notes' | 'createdJobs'>;

/**
 * Update User data interface
 * All fields optional except id, excludes relationships
 */
export type UpdateUserData = Partial<Omit<UserData, 'id' | 'created_at' | 'updated_at' | 'activityLogs' | 'assignedJobs' | 'assignedTasks' | 'jobAssignments' | 'technicianJobs' | 'scheduledDateTimeUsers' | 'scheduledDateTimes' | 'notes' | 'createdJobs'>>;
