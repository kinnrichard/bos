Description:
    Generate TypeScript factory models from Rails schema introspection.
    Creates both ReactiveRecord (Svelte-optimized) and ActiveRecord (vanilla JS)
    models using the Phase 1 factory system.

Example:
    bin/rails generate zero:factory_models

    This will create:
        frontend/src/lib/models/generated/user.ts
        frontend/src/lib/models/generated/client.ts
        frontend/src/lib/models/generated/job.ts
        frontend/src/lib/models/generated/index.ts

Options:
    --dry-run        Show what would be generated without creating files
    --force          Force generation even if conflicts are detected
    --table=TABLE    Generate factory model for specific table only
    --exclude-tables=one,two,three    Tables to exclude from generation
    --output-dir=DIR                  Custom output directory (default: frontend/src/lib/models/generated)

Generated files provide:
    - Type-safe interfaces from Rails schema
    - Factory methods using ModelConfigBuilder
    - Both ReactiveRecord and ActiveRecord implementations
    - Rails-like query methods (find, findBy, all, where)
    - Association support based on Rails relationships
    - Enum validation from Rails defined_enums
    - Comprehensive "DO NOT EDIT" warnings

Usage in code:
    import { UserReactive, UserActive } from '$lib/models/generated/user';
    
    // Svelte component (reactive)
    const user = UserReactive.find('123');
    $: console.log('User data:', user.record);
    
    // Vanilla JS (performant)
    const userActive = UserActive.find('123');
    userActive.subscribe((data) => console.log('User:', data));